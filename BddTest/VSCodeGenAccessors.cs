// ------------------------------------------------------------------------------
//<autogenerated>
//        This code was generated by Microsoft Visual Studio Team System 2005.
//
//        Changes to this file may cause incorrect behavior and will be lost if
//        the code is regenerated.
//</autogenerated>
//------------------------------------------------------------------------------
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace BddTest
{
[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class BaseAccessor {
    
    protected Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject m_privateObject;
    
    protected BaseAccessor(object target, Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType type) {
        m_privateObject = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject(target, type);
    }
    
    protected BaseAccessor(Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType type) : 
            this(null, type) {
    }
    
    internal virtual object Target {
        get {
            return m_privateObject.Target;
        }
    }
    
    public override string ToString() {
        return this.Target.ToString();
    }
    
    public override bool Equals(object obj) {
        if (typeof(BaseAccessor).IsInstanceOfType(obj)) {
            obj = ((BaseAccessor)(obj)).Target;
        }
        return this.Target.Equals(obj);
    }
    
    public override int GetHashCode() {
        return this.Target.GetHashCode();
    }
}

    //[System.Diagnostics.DebuggerStepThrough()]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
    //internal class BddSharp_Kernel_BddGCacheAccessor : BaseAccessor
    //{

    //    protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType(typeof(global::BddSharp.Kernel.BddGCache));

    //    //internal BddSharp_Kernel_BddGCacheAccessor(global::BddSharp.Kernel.BddGCache target)
    //    //    :
    //    //        base(target, m_privateType)
    //    //{
    //    //}

    //    //internal global::BddSharp.Kernel.BddGCacheEntry[] cacheArray
    //    //{
    //    //    get
    //    //    {
    //    //        global::BddSharp.Kernel.BddGCacheEntry[] ret = ((global::BddSharp.Kernel.BddGCacheEntry[])(m_privateObject.GetField("cacheArray")));
    //    //        return ret;
    //    //    }
    //    //    set
    //    //    {
    //    //        m_privateObject.SetField("cacheArray", value);
    //    //    }
    //    //}

    //    //internal uint size
    //    //{
    //    //    get
    //    //    {
    //    //        uint ret = ((uint)(m_privateObject.GetField("size")));
    //    //        return ret;
    //    //    }
    //    //    set
    //    //    {
    //    //        m_privateObject.SetField("size", value);
    //    //    }
    //    //}
    //}
//[System.Diagnostics.DebuggerStepThrough()]
//[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
//internal class BddSharp_Kernel_KernelAccessor : BaseAccessor {
    
//    protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType(typeof(global::BddSharp.Kernel.Kernel));
    
//    //internal BddSharp_Kernel_KernelAccessor(global::BddSharp.Kernel.Kernel target) : 
//    //        base(target, m_privateType) {
//    //}
    
    
    
//    //internal static global::BddSharp.Kernel.BddGCache G {
//    //    get {
//    //        global::BddSharp.Kernel.BddGCache ret = ((global::BddSharp.Kernel.BddGCache)(m_privateType.GetStaticField("G")));
//    //        return ret;
//    //    }
//    //    set {
//    //        m_privateType.SetStaticField("G", value);
//    //    }
//    //}
    
//    internal static int[,,] Lookup {
//        get {
//            int[,,] ret = ((int[,,])(m_privateType.GetStaticField("Lookup")));
//            return ret;
//        }
//        set {
//            m_privateType.SetStaticField("Lookup", value);
//        }
//    }
    
//    internal static int MaxU {
//        get {
//            int ret = ((int)(m_privateType.GetStaticField("MaxU")));
//            return ret;
//        }
//        set {
//            m_privateType.SetStaticField("MaxU", value);
//        }
//    }
    
//    internal static int bddfalse {
//        get {
//            int ret = ((int)(m_privateType.GetStaticField("bddfalse")));
//            return ret;
//        }
//        set {
//            m_privateType.SetStaticField("bddfalse", value);
//        }
//    }
    
//    internal static int bddtrue {
//        get {
//            int ret = ((int)(m_privateType.GetStaticField("bddtrue")));
//            return ret;
//        }
//        set {
//            m_privateType.SetStaticField("bddtrue", value);
//        }
//    }
    
//    internal static int maxVar {
//        get {
//            int ret = ((int)(m_privateType.GetStaticField("maxVar")));
//            return ret;
//        }
//        set {
//            m_privateType.SetStaticField("maxVar", value);
//        }
//    }
    
//    internal static int Mk(int var, int l, int h) {
//        object[] args = new object[] {
//                var,
//                l,
//                h};
//        int ret = ((int)(m_privateType.InvokeStatic("Mk", new System.Type[] {
//                    typeof(int),
//                    typeof(int),
//                    typeof(int)}, args)));
//        return ret;
//    }
    
//    internal static int Apply(global::BddTest.BddSharp_Kernel_BoolOperatorAccessor op, int u1, int u2) {
//        Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType target_fallback1 = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("Bdd", "BddSharp.Kernel.BoolOperator");
//        object[] args = new object[] {
//                System.Delegate.CreateDelegate(target_fallback1.ReferencedType, new BddSharp_Kernel_BoolOperatorAccessorInvoker(op), "Invoke"),
//                u1,
//                u2};
//        Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType target_fallback2 = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("Bdd", "BddSharp.Kernel.BoolOperator");
//        int ret = ((int)(m_privateType.InvokeStatic("Apply", new System.Type[] {
//                    target_fallback2.ReferencedType,
//                    typeof(int),
//                    typeof(int)}, args)));
//        return ret;
//    }
    
//    internal static int Apply(int op, int u1, int u2) {
//        object[] args = new object[] {
//                op,
//                u1,
//                u2};
//        int ret = ((int)(m_privateType.InvokeStatic("Apply", new System.Type[] {
//                    typeof(int),
//                    typeof(int),
//                    typeof(int)}, args)));
//        return ret;
//    }
    
//    internal static bool ToBool(int u) {
//        object[] args = new object[] {
//                u};
//        bool ret = ((bool)(m_privateType.InvokeStatic("ToBool", new System.Type[] {
//                    typeof(int)}, args)));
//        return ret;
//    }
    
//    internal static int Terminal(bool b) {
//        object[] args = new object[] {
//                b};
//        int ret = ((int)(m_privateType.InvokeStatic("Terminal", new System.Type[] {
//                    typeof(bool)}, args)));
//        return ret;
//    }
    
//    internal static System.Collections.Generic.List<int> Reorder(System.Collections.Generic.List<int> lst) {
//        object[] args = new object[] {
//                lst};
//        System.Collections.Generic.List<int> ret = ((System.Collections.Generic.List<int>)(m_privateType.InvokeStatic("Reorder", new System.Type[] {
//                    typeof(System.Collections.Generic.List<int>)}, args)));
//        return ret;
//    }
    
//    internal static global::BddSharp.Kernel.Bdd Compose(global::BddSharp.Kernel.Bdd t, int tp, int x) {
//        object[] args = new object[] {
//                t,
//                tp,
//                x};
//        global::BddSharp.Kernel.Bdd ret = ((global::BddSharp.Kernel.Bdd)(m_privateType.InvokeStatic("Compose", new System.Type[] {
//                    typeof(global::BddSharp.Kernel.Bdd),
//                    typeof(int),
//                    typeof(int)}, args)));
//        return ret;
//    }
    
//    internal static long gKey(int u1, int u2) {
//        object[] args = new object[] {
//                u1,
//                u2};
//        long ret = ((long)(m_privateType.InvokeStatic("gKey", new System.Type[] {
//                    typeof(int),
//                    typeof(int)}, args)));
//        return ret;
//    }
    
//    internal static int Res(int u, int restrictVar, bool restrictValue) {
//        object[] args = new object[] {
//                u,
//                restrictVar,
//                restrictValue};
//        int ret = ((int)(m_privateType.InvokeStatic("Res", new System.Type[] {
//                    typeof(int),
//                    typeof(int),
//                    typeof(bool)}, args)));
//        return ret;
//    }
    
//    internal static long Count(int u) {
//        object[] args = new object[] {
//                u};
//        long ret = ((long)(m_privateType.InvokeStatic("Count", new System.Type[] {
//                    typeof(int)}, args)));
//        return ret;
//    }
    
//    internal static string RecursiveCompactAnySat(int u, int var) {
//        object[] args = new object[] {
//                u,
//                var};
//        string ret = ((string)(m_privateType.InvokeStatic("RecursiveCompactAnySat", new System.Type[] {
//                    typeof(int),
//                    typeof(int)}, args)));
//        return ret;
//    }
    
//    internal static string RecursiveAllSat(int u) {
//        object[] args = new object[] {
//                u};
//        string ret = ((string)(m_privateType.InvokeStatic("RecursiveAllSat", new System.Type[] {
//                    typeof(int)}, args)));
//        return ret;
//    }
//}
[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class BddSharp_Kernel_BoolOperatorAccessorInvoker {
    
    private System.Delegate d;
    
    internal BddSharp_Kernel_BoolOperatorAccessorInvoker(System.Delegate _d) {
        d = _d;
    }
    
    internal virtual int Invoke(int b1, int b2) {
        object[] args = new object[] {
                b1,
                b2};
        int ret = ((int)(d.DynamicInvoke(args)));
        return ret;
    }
}
delegate int BddSharp_Kernel_BoolOperatorAccessor(int b1, int b2);

}
