// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
using BddSharp.Kernel;
namespace BddTest
{
    /// <summary>
    ///This is a test class for BddSharp.Kernel.Fdd and is intended
    ///to contain all BddSharp.Kernel.Fdd Unit Tests
    ///</summary>
    [TestClass()]
    public class FddTest
    {


        private TestContext testContextInstance;

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }
        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        //[ClassInitialize()]
        //public static void MyClassInitialize(TestContext testContext)
        //{
        //}
        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        [TestInitialize()]
        public void MyTestInitialize()
        {
            FddKernel.Setup();
        }
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //
        #endregion


        /// <summary>
        ///A test for Equals (Fdd)
        ///</summary>
        [TestMethod()]
        public void EqualsTest()
        {
            int MaxValue = 2;

            Fdd target = new Fdd(MaxValue);

            Fdd fdd = new Fdd(MaxValue);

            bool expected = false;
            bool actual;

            actual = target.Equals(fdd);

            Assert.AreEqual(expected, actual, "BddSharp.Kernel.Fdd.Equals did not return the expected value.");
        }

        /// <summary>
        ///A test for Fdd (int)
        ///</summary>
        [TestMethod()]
        public void ConstructorTest()
        {
            int MaxValue = 3;

            Fdd target = new Fdd(MaxValue);

            Assert.IsNotNull(target, "Fdd was not created");
            Assert.IsNotNull(target.Root, "Root of Fdd was not initialized to a valid Bdd");

        }

        /// <summary>
        ///A test for GetHashCode ()
        ///</summary>
        [TestMethod()]
        public void GetHashCodeTest()
        {
            int MaxValue = 3;

            Fdd target = new Fdd(MaxValue);

            int expected = 1;
            int actual = target.GetHashCode();

            Assert.AreEqual(expected, actual, "Root did not get startvar 1");
        }

        /// <summary>
        ///A test for Root
        ///</summary>
        [TestMethod()]
        public void RootTest()
        {
            int MaxValue = 3;

            Fdd target = new Fdd(MaxValue);

            Assert.AreEqual(true, target.Root.High.IsTerminal(), "Root of Fdd not an ithvar (high not a terminal)");
            Assert.AreEqual(true, target.Root.Low.IsTerminal(), "Root of Fdd not an ithvar (low not a terminal)");
        }

        /// <summary>
        ///A test for ToString ()
        ///</summary>
        [TestMethod()]
        public void ToStringTest()
        {
            int MaxValue = 3;

            Fdd target = new Fdd(MaxValue);

            String expected = "1";
            String actual = target.ToString();

            Assert.AreEqual(expected, actual, "Root did not get startvar 1");
        }

        /// <summary>
        ///A test for Var
        ///</summary>
        [TestMethod()]
        public void VarTest()
        {
            int MaxValue = 40;

            Fdd target = new Fdd(MaxValue);

            int val = 1;

            Assert.AreEqual(val, target.Var, "BddSharp.Kernel.Fdd.Var was not set correctly.");
        }

    }


}
